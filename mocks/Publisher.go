// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	parking "git.garena.com/sea-labs-id/batch-04/shared-projects/go-parking-lot/parking"
	mock "github.com/stretchr/testify/mock"
)

// Publisher is an autogenerated mock type for the Publisher type
type Publisher struct {
	mock.Mock
}

// Subscribe provides a mock function with given fields: s
func (_m *Publisher) Subscribe(s parking.Subscriber) {
	_m.Called(s)
}

type mockConstructorTestingTNewPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewPublisher creates a new instance of Publisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPublisher(t mockConstructorTestingTNewPublisher) *Publisher {
	mock := &Publisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
